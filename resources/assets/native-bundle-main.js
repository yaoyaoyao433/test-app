(function(t){var e;this.window=this.window||t,(()=>{"use strict";var t={981:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0});const i=a(595);window.bridgeCallback={};e.default=class{constructor(t,e){this.callbackId=0,this.generatorCallbackId=()=>{const t=(new Date).getTime(),e=`_cb_id_${this.instanceId}_${this.taskId}_${this.callbackId}_${t}`;return this.callbackId+=1,e},this.finishCallBack=(t,e={},a=!0)=>{window.callNative(this.instanceId,this.taskId,"executeCallback",i.stringify({isSuccess:a,data:t}),i.stringify(e));try{window.instanceMap[this.instanceId].tasks[this.taskId]=null,i.default.info(`实例${this.instanceId}的任务${this.taskId}已被销毁`)}catch(t){i.default.error(`实例${this.instanceId}的任务${this.taskId}销毁失败`)}},this.instanceId=t,this.taskId=e}created(){this.generatorNativeModule()}generatorNativeModule(){try{const t=window.bridgeModules;t&&Object.keys(t).forEach((e=>{this[e]={},this[e]=t[e].reduce(((t,a)=>Object.assign(Object.assign({},t),{[a]:({args:t,callback:i}={},n)=>{this.callNativeModule({moduleName:e,methodName:a,args:t,callback:i},n)}})),{})}))}catch(t){i.default.error(`实例${this.instanceId}生成native方法错误，可能是注入信息不对，注入模块：${i.stringify(window.bridgeModules)}`)}}callNativeModule({moduleName:t,methodName:e,args:a,callback:n},s={}){try{let r;n&&(r=this.generatorCallbackId(),window.bridgeCallback[r]=n),window.callNativeModule(this.instanceId,this.taskId,t,e,i.stringify(a),r,i.stringify(s))}catch(a){i.default.error(`实例${this.instanceId}调用native方法失败，模块：${t}，方法：${e}`)}}has(t,e){return!(!this[t]||!this[t][e])}}},895:(t,e,a)=>{Object.defineProperty(e,"__esModule",{value:!0});const i=a(595);window.instanceMap={};e.default=new class{createInstance(t,e,a){try{const a=window.isDebug?window.eval(e):new Function(`return ${e}`)();return window.instanceMap[t]&&i.default.warn(`实例${t}已经存在，再次执行创建，已被覆盖`),window.instanceMap[t]=a,window.instanceMap[t].tasks={},i.default.info(`实例${t}创建成功`),!0}catch(e){return i.default.error(`实例${t}执行报错，错误信息：${e.toString()}`),!1}}destroyInstance(t){return window.instanceMap[t]=null,i.default.info(`实例${t}已被销毁`),!0}startInstance(t,e,a,n,s){try{if(window.instanceMap[t]){const s=new window.instanceMap[t](t,e);window.instanceMap[t].tasks[e]=s,s.main(a,n),i.default.info(`实例${t}启动成功，参数：${a},${i.stringify(n)}`)}else i.default.error(`实例${t}不存在`);return!0}catch(e){return i.default.error(`实例${t}启动报错，错误信息：${e.toString()}`),!1}}callJs(t,e,a,n,s,r,d){try{window.bridgeCallback[s](r.data,{moduleName:a,methodName:n},d),window.bridgeCallback[s]=null,delete window.bridgeCallback[s],i.default.info(`实例${t}回调执行成功, 模块信息：${a}.${n}, 回调id：${s}，结果：${i.stringify(r)}`)}catch(e){i.default.error(`实例${t}回调执行错误, 模块信息：${a}.${n}, 回调id：${s}执行错误, 具体错误信息：${e.toString()}`)}}registerModules(t){window.bridgeModules=t,i.default.info(`注入模块信息：${i.stringify(t)}`)}}},595:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.stringify=void 0;const a="[blue_js]",i={error(t){window.jsLog(`${a} ${t}`,"__ERROR")},warn(t){window.jsLog(`${a} ${t}`,"__WARN")},info(t){window.jsLog(`${a} ${t}`,"__INFO")},log(t){window.jsLog(`${a} ${t}`,"__LOG")},debug(t){window.jsLog(`${a} ${t}`,"__DEBUG")}};e.stringify=t=>{try{return JSON.stringify(t)}catch(e){return`解析失败:${t}`}},e.default=i}},a={};function i(e){if(a[e])return a[e].exports;var n=a[e]={exports:{}};return t[e](n,n.exports,i),n.exports}var n={};(()=>{var t=n;Object.defineProperty(t,"__esModule",{value:!0}),t.nativeLog=t.bridge=void 0;const e=i(895),a=i(981),s=i(595);t.default=e.default,t.bridge=a.default,t.nativeLog=s.default})(),e=n})(),this.createInstance=e.default.createInstance,this.destroyInstance=e.default.destroyInstance,this.startInstance=e.default.startInstance,this.callJs=e.default.callJs,this.registerModules=e.default.registerModules,this.Bridge=e.bridge,this.nativeLog=e.nativeLog})(this);